@model BIMP.Models.users
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <!-- This file has been downloaded from Bootsnipp.com. Enjoy! -->
    <title>Password Strength Meter - Bootsnipp.com</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/style.css" rel="stylesheet" />
    <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
</head>
@Html.ValidationSummary(true)
<body>
    <div class="container">
        <div class="row" id="pwd-container">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <section class="login-form">
                    <form method="post" action="#" role="login">
                        <img src="http://i.imgur.com/RcmcLv4.png" class="img-responsive" alt="" />
                        @Html.TextBoxFor(u => u.USER_ID, new { name = "USER_ID", placeholder = "ID", @class = "form-control input-lg" })

                        @Html.PasswordFor(u => u.PASSWORD, new { name = "PASSWORD", placeholder = "PASSWORD", @class = "form-control input-lg", required = "" })
                        <div>
                            <label id="result"> </label>
                        </div>

                        <button type="submit" name="go" class="btn btn-lg btn-primary btn-block">로그인</button>
                        <div>
                            <a href="/Auth/Registration">회원가입</a> or <a href="#">비밀번호 잃어버림</a>
                        </div>

                    </form>
                    <div class="form-links">
                        <a href="#">www.naver.com</a>
                    </div>
                </section>
            </div>
            <div class="col-md-4"></div>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            var result = '@ViewBag.Result';
            if (result == "False") {
                $("#result").text("아이디와 비밀번호를 다시 확인해주세요.");
                $("#result").css("background-color", "red").css('color', 'white');
            }


            $.when(a(), b()).then(function () {
                $.when(c(), d()).then(function () { f(); })
            });
        });
        var a = function () {
            var deferred = $.Deferred();

            try {
                
                $.when(ajax1()).then(function () {
                    ajax2();
                }).then(function () {
                    setTimeout(function () { console.log('a성공'); deferred.resolve('성공'); }, 5000);
                    console.log('1000');
                });
            } catch (error) {
                deferred.reject('실패');
            }
            return deferred.promise();
        }

        var b = function () {
            var deferred = $.Deferred();

            try {

                setTimeout(function () { console.log('b성공'); deferred.resolve('성공'); }, 8000);
            } catch (error) {
                deferred.reject('실패');
            }
            return deferred.promise();
        }

        var c = function () {
            var deferred = $.Deferred();

            try {

                setTimeout(function () { console.log('c성공'); deferred.resolve('성공'); }, 3000);
            } catch (error) {
                deferred.reject('실패');
            }
            return deferred.promise();
        }

        var d = function () {
            var deferred = $.Deferred();

            try {

                setTimeout(function () { console.log('d성공'); deferred.resolve('성공'); }, 1000);
            } catch (error) {
                deferred.reject('실패');
            }
            return deferred.promise();
        }

        var f = function () {
            var deferred = $.Deferred();

            try {

                setTimeout(function () { console.log('f성공'); deferred.resolve('성공'); }, 3000);
            } catch (error) {
                deferred.reject('실패');
            }
            return deferred.promise();
        }

        function ajax1() {
            return $.ajax({
                type: 'GET',
                dataType: "json",
                url: "/api/Values",
                async: true,
                cache: false,
                success: function (result) {
                    console.log('ajax1 Success');
                },
                error: function (error) {
                    var status = error.status;
                    try {
                        var errorMsg = JSON.parse(error.responseText);

                        if (status == "401") {
                            getMainPage(window).showLogin();
                        } else {
                            modalShow("status : " + status + ", Message : " + errorMsg.Message);
                        }
                    } catch (Err) {
                        modalShow(error.status);
                    }
                }
            });
        }

        function ajax2() {
            return $.ajax({
                type: 'GET',
                dataType: "json",
                url: "/api/Values",
                async: true,
                cache: false,
                success: function (result) {
                    console.log('ajax2 Success');
                },
                error: function (error) {
                    var status = error.status;
                    try {
                        var errorMsg = JSON.parse(error.responseText);

                        if (status == "401") {
                            getMainPage(window).showLogin();
                        } else {
                            modalShow("status : " + status + ", Message : " + errorMsg.Message);
                        }
                    } catch (Err) {
                        modalShow(error.status);
                    }
                }
            });
        }
    </script>
</body>
</html>
